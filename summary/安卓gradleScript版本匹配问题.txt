gradle-wrapper.properties:
	#Tue Jul 24 16:22:43 CST 2018
	distributionBase=GRADLE_USER_HOME
	distributionPath=wrapper/dists
	zipStoreBase=GRADLE_USER_HOME
	zipStorePath=wrapper/dists
	distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip


build.gradle:
	 classpath 'com.android.tools.build:gradle:3.1.2'

	android {
	    compileSdkVersion 26
	    buildToolsVersion "26.0.1"
	    defaultConfig {
		applicationId "midea.cf.panelrec"
		minSdkVersion 19
		targetSdkVersion 26
		versionCode 1
		versionName "2.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	    }
	    buildTypes {
		release {
		    minifyEnabled false
		    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	    }
	    compileOptions {
		targetCompatibility 1.8
		sourceCompatibility 1.8
	    }
	}



// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
























